[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ehr-privacy-framework"
version = "1.0.0"
description = "Privacy-Preserving Electronic Health Records (EHR) Framework"
readme = "README.md"
authors = [
    {name = "Ahmet Emre Usta", email = "a.emreusta@hotmail.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Security :: Cryptography",
]
requires-python = ">=3.11"
dependencies = [
    "pandas>=2.3.2",
    "numpy>=2.3.3",
    "matplotlib>=3.10.6",
    "plotly>=6.3.0",
    "streamlit>=1.49.1",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.13.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
]
encryption = [
    "Pyfhel>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/aemreusta/ehr-privacy-framework"
Repository = "https://github.com/aemreusta/ehr-privacy-framework.git"
Documentation = "https://github.com/aemreusta/ehr-privacy-framework/blob/main/README.md"
"Bug Tracker" = "https://github.com/aemreusta/ehr-privacy-framework/issues"
"Live Demo" = "https://ehr-privacy-framework.streamlit.app/"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "data/raw",
    "data/processed",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.11+
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F", "W", "I", "N", "UP", "B", "A", "C4", "ICN", "PIE", "PT", "SIM"]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B905",  # zip() without an explicit strict= parameter
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"test_*.py" = ["PLR2004", "S101", "TID252"]
"**/tests/**/*" = ["PLR2004", "S101", "TID252"]

# Notebooks can have longer lines and more complex expressions
"*.ipynb" = ["E501", "F401", "F841"] 
